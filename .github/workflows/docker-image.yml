name: "Build and Push Docker image"

on:
    push:
        branches: 
            - main
        paths-ignore:
          - '**.md'
          - '.gitignore'
          - '.env.example'
env:
    DOCKER_COMPOSE_VERSION: "2.21.0"
    DEPLOY_PATH: "/opt/myapp"
    COMPOSE_FILE: "/opt/myapp/docker-compose.yaml"

jobs:
    build-and-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: Setup Docker 
              uses: docker/setup-buildx-action@v2

            - name: Dockerhub Login
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{secrets.DOCKER_PASSWORD }}

            - name: Build and Push Docker Image 
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest
# second job, to deploy the docker compose file 
    deploy-to-production:
        needs: build-and-push
        runs-on: ubuntu-latest
        environment: production
        concurrency:
            group: production_environment
            cancel-in-progress: false

        steps:
            - name: install SSH Key 
              uses: shimataro/ssh-key-action@v2
              with:
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                name: id_rsa
                known_hosts: ${{secrets.SSH_KNOWN_HOSTS }}
                config: | 
                    Hostproduction
                    HostName ${{ secrets.PRODUCTION_HOST }}
                    User ${{ secrets.PRODUCTION_USER }}
                    IdentityFile ~/.ssh/id_rsa
                    StrictHostKeyChecking no
            - name: Dockerhub Login 
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Setup remote directory
              run: |
                ssh production "sudo mkdir -p ${ DEPLOY_PATH }/config"
                ssh production "sudo mkdir -p ${DEPLOY_PATH}/data"

            - name: Copy configuration Files
              run: | 
                if [-f .env ]; then
                    scp .env production:${DEPLOY_PATH}/.env
                else
                    echo ".env file not found, skipping"
                fi
                if [ -f docker-compose.yaml]; then 
                    scp docker-compose.yaml
                    production:${DEPLOY_PATH}/docker-compose.yaml
                else
                    echo "docker-compose.yaml not found, skipping"
                fi
                if [ -d ./config ]; then
                    scp -r ./config/* production:${DEPLOY_PATH}/config/
                else
                    echo "./config directory not found, skipping."
                fi
                
